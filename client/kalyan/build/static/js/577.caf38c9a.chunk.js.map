{"version":3,"file":"static/js/577.caf38c9a.chunk.js","mappings":"qLAMA,MAwEA,EAxEcA,IAAsB,IAArB,YAAEC,GAAaD,EAC5B,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,IACjCK,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC/CF,EAAAA,EAAAA,MAAA,OAAKG,GAAG,QAAQF,UAAU,0EAAyEC,SAAA,EACjGE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,kBAAkBI,SAtBpBC,UAClBC,EAAEC,iBAEF,WAEyBC,EAAAA,EAAMC,KAAK,qDAAsD,CAAEnB,QAAOG,cAEpFiB,KAAKC,UAChBf,EAAW,qBACXP,GAAY,GACZuB,aAAaC,QAAQ,UAAW,QAChChB,EAAS,qBAEb,CAAE,MAAOiB,GAAQ,IAADC,EAAAC,EAAAC,EAAAC,EACdtB,GAAyB,QAAdmB,EAAAD,EAAMK,gBAAQ,IAAAJ,GAAM,QAANC,EAAdD,EAAgBL,YAAI,IAAAM,OAAN,EAAdA,EAAsBrB,UAAW,gBAC5CyB,EAAAA,GAAMN,OAAoB,QAAdG,EAAAH,EAAMK,gBAAQ,IAAAF,GAAM,QAANC,EAAdD,EAAgBP,YAAI,IAAAQ,OAAN,EAAdA,EAAsBvB,UAAW,eAAgB,CAAE0B,SAAU,cAC3E,GAM4DpB,UACtDF,EAAAA,EAAAA,MAAA,YAAUC,UAAU,+CAA8CC,SAAA,EAChEE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,oBAAmBC,SAAC,oBAEtCE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,2DAA2DsB,QAAQ,QAAOrB,SAAC,UAG5FE,EAAAA,EAAAA,KAAA,SACEH,UAAU,iFACVuB,KAAK,QACLrB,GAAG,QACHsB,MAAOlC,EACPmC,SAAWnB,GAAMf,EAASe,EAAEoB,OAAOF,OACnCG,UAAQ,KAGVxB,EAAAA,EAAAA,KAAA,SAAOH,UAAU,2DAA2DsB,QAAQ,WAAUrB,SAAC,cAG/FE,EAAAA,EAAAA,KAAA,SACEH,UAAU,iFACVuB,KAAK,WACLrB,GAAG,WACHsB,MAAO/B,EACPgC,SAAWnB,GAAMZ,EAAYY,EAAEoB,OAAOF,OACtCG,UAAQ,KAGVxB,EAAAA,EAAAA,KAAA,UACEH,UAAU,4FACVuB,KAAK,SAAQtB,SACd,gBAMJN,IAAWQ,EAAAA,EAAAA,KAAA,KAAGH,UAAU,mCAAkCC,SAAEN,QAE/DQ,EAAAA,EAAAA,KAACyB,EAAAA,GAAc,MACX,C","sources":["Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Login = ({ setIsLogged }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault(); // Prevent form submission from refreshing the page\r\n\r\n    try {\r\n      // Send the email and password to the backend\r\n      const response = await axios.post('https://kalyanblog.onrender.com/kalyan/auth/verify', { email, password });\r\n\r\n      if (response.data.success) {\r\n        setMessage(\"Login successful!\");\r\n        setIsLogged(true);\r\n        localStorage.setItem('success', 'true'); // Store the success flag in localStorage\r\n        navigate('/admin/createblog'); // Redirect on successful login\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || 'Login failed');\r\n      toast.error(error.response?.data?.message || 'Login failed', { position: 'top-center' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <div id=\"login\" className=\"w-64 h-80 bg-indigo-50 rounded shadow flex flex-col justify-between p-3\">\r\n        <form className=\"text-indigo-500\" onSubmit={handleLogin}>\r\n          <fieldset className=\"border-4 border-dotted border-indigo-500 p-5\">\r\n            <legend className=\"px-2 italic -mx-2\">Welcome again!</legend>\r\n\r\n            <label className=\"text-xs font-bold after:content-['*'] after:text-red-400\" htmlFor=\"email\">\r\n              Mail\r\n            </label>\r\n            <input\r\n              className=\"w-full p-2 mb-2 mt-1 outline-none ring-none focus:ring-2 focus:ring-indigo-500\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <label className=\"text-xs font-bold after:content-['*'] after:text-red-400\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"w-full p-2 mb-2 mt-1 outline-none ring-none focus:ring-2 focus:ring-indigo-500\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <button\r\n              className=\"w-full rounded bg-indigo-500 text-indigo-50 p-2 text-center font-bold hover:bg-indigo-400\"\r\n              type=\"submit\"\r\n            >\r\n              Log In\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n\r\n        {message && <p className=\"text-center text-indigo-500 mt-3\">{message}</p>}\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_ref","setIsLogged","email","setEmail","useState","password","setPassword","message","setMessage","navigate","useNavigate","_jsxs","className","children","id","_jsx","onSubmit","async","e","preventDefault","axios","post","data","success","localStorage","setItem","error","_error$response","_error$response$data","_error$response2","_error$response2$data","response","toast","position","htmlFor","type","value","onChange","target","required","ToastContainer"],"sourceRoot":""}