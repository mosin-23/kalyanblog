{"version":3,"file":"static/js/450.8c4c4e45.chunk.js","mappings":"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","sources":["Create.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\naxios.defaults.baseURL = 'https://kalyanblog.onrender.com/kalyan';\r\n\r\nconst Create = ({ setIsLogged }) => {\r\n  const [blogData, setBlogData] = useState({\r\n    title: '',\r\n    description: '',\r\n    category: '',\r\n    images: [''], // Start with an empty array for images\r\n    links: [''], // Start with an empty array for links\r\n    bid: '', // Add bid field to state\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false); // State for loading\r\n  const nav = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('success'); // Remove the success flag from localStorage\r\n    nav('/admin/login'); // Redirect to login page\r\n  };\r\n\r\n  const handleChange = (e, index, type) => {\r\n    const { name, value } = e.target;\r\n    if (type === 'images') {\r\n      const updatedImages = [...blogData.images];\r\n      updatedImages[index] = value;\r\n      setBlogData({ ...blogData, images: updatedImages });\r\n    } else if (type === 'links') {\r\n      const updatedLinks = [...blogData.links];\r\n      updatedLinks[index] = value;\r\n      setBlogData({ ...blogData, links: updatedLinks });\r\n    } else {\r\n      setBlogData({ ...blogData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const addNewField = (type) => {\r\n    if (type === 'images') {\r\n      setBlogData({ ...blogData, images: [...blogData.images, ''] });\r\n    } else if (type === 'links') {\r\n      setBlogData({ ...blogData, links: [...blogData.links, ''] });\r\n    }\r\n  };\r\n\r\n  const createBlogPost = async () => {\r\n    setIsLoading(true); // Set loading state to true while creating the blog post\r\n    try {\r\n      const resp = await axios.post('/addblog', {\r\n        title: blogData.title,\r\n        description: blogData.description,\r\n        category: blogData.category,\r\n        images: blogData.images,\r\n        links: blogData.links,\r\n        bid: blogData.bid, // Include bid field in request\r\n      });\r\n      SuccessBlog();\r\n    } catch (error) {\r\n      console.error('Error Creating Blog Post', error);\r\n      ErrorBlog();\r\n    } finally {\r\n      setIsLoading(false); // Reset loading state after request completes\r\n    }\r\n  };\r\n\r\n  const ErrorBlog = () => {\r\n    toast.error('Error Creating Blog Post!', { position: 'top-center' });\r\n  };\r\n\r\n  const SuccessBlog = () => {\r\n    toast.success('Blog Post Successfully Created!', { position: 'top-center' });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      blogData.title &&\r\n      blogData.description &&\r\n      blogData.category &&\r\n      blogData.images.length > 0 &&\r\n      blogData.bid\r\n    ) {\r\n      createBlogPost();\r\n    } else {\r\n      toast.error('Please fill all required fields to create a blog post.', { position: 'top-center' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-center items-center\">\r\n        <div className=\"CreateBlog flex flex-col mt-8 border border-2 py-4 rounded-lg border-teal-300 hover:shadow-teal-400 max-w-fit px-10 ml-28 hover:shadow-lg hover:shadow-emerald-400 mb-10 hover:border-2 hover:border-purple-400\">\r\n          <div className=\"flex flex-row justify-center\">\r\n            <h1 className=\"font-bold mb-4 mr-2\">Create a Blog Post</h1>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"flex flex-col items-center\">\r\n              <div className=\"w-fit\">\r\n                <label htmlFor=\"title\" className=\"block mb-1 font-medium\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  id=\"title\"\r\n                  placeholder=\"Enter Blog Title\"\r\n                  className=\"border border-2 w-full px-2 py-1 rounded-md focus:outline-blue-500\"\r\n                  value={blogData.title}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"w-fit\">\r\n                <label htmlFor=\"category\" className=\"block mb-1 font-medium\">Category</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  id=\"category\"\r\n                  placeholder=\"Enter Category\"\r\n                  className=\"border border-2 w-full px-2 py-1 rounded-md focus:outline-blue-500\"\r\n                  value={blogData.category}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              {/* Render images inputs */}\r\n              {blogData.images.map((image, index) => (\r\n                <div className=\"w-fit\" key={index}>\r\n                  <label htmlFor={`image-${index}`} className=\"block mb-1 font-medium\">Image URL {index + 1}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    id={`image-${index}`}\r\n                    placeholder=\"Enter Image URL\"\r\n                    className=\"border border-2 w-full px-2 py-1 rounded-md focus:outline-blue-500\"\r\n                    value={image}\r\n                    onChange={(e) => handleChange(e, index, 'images')}\r\n                  />\r\n                </div>\r\n              ))}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => addNewField('images')}\r\n                className=\"border border-2 px-4 py-2 mt-2 bg-teal-500 rounded-xl hover:bg-teal-600 text-white\"\r\n              >\r\n                Add Another Image\r\n              </button>\r\n\r\n              {/* Render links inputs */}\r\n              {blogData.links.map((link, index) => (\r\n                <div className=\"w-fit\" key={index}>\r\n                  <label htmlFor={`link-${index}`} className=\"block mb-1 font-medium\">Link URL {index + 1}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"link\"\r\n                    id={`link-${index}`}\r\n                    placeholder=\"Enter Link URL\"\r\n                    className=\"border border-2 w-full px-2 py-1 rounded-md focus:outline-blue-500\"\r\n                    value={link}\r\n                    onChange={(e) => handleChange(e, index, 'links')}\r\n                  />\r\n                </div>\r\n              ))}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => addNewField('links')}\r\n                className=\"border border-2 px-4 py-2 mt-2 bg-teal-500 rounded-xl hover:bg-teal-600 text-white\"\r\n              >\r\n                Add Another Link\r\n              </button>\r\n\r\n              {/* Bid input field */}\r\n              <div className=\"w-fit\">\r\n                <label htmlFor=\"bid\" className=\"block mb-1 font-medium\">Bid Amount</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"bid\"\r\n                  id=\"bid\"\r\n                  placeholder=\"Enter Bid Amount\"\r\n                  className=\"border border-2 w-full px-2 py-1 rounded-md focus:outline-blue-500\"\r\n                  value={blogData.bid}\r\n                  onChange={handleChange}\r\n                  min=\"0\" // Ensure bid amount is a positive number\r\n                />\r\n              </div>\r\n\r\n              <div className=\"w-fit\">\r\n                <label htmlFor=\"content\" className=\"block mb-1 font-medium\">Content</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  placeholder=\"Enter Blog Content\"\r\n                  className=\"border border-2 w-full px-2 py-1 rounded-md focus:outline-blue-500\"\r\n                  value={blogData.description}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <button \r\n                className={`border border-2 px-4 py-2 mt-4 ${isLoading ? 'bg-gray-500' : 'bg-emerald-500'} rounded-xl hover:bg-emerald-600 text-white`} \r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? 'Creating...' : 'Create Blog Post'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n      <button\r\n        onClick={handleLogout}\r\n        className=\"flex  px-4 py-2 mt-4 bg-red-500 rounded-xl hover:bg-red-600 text-white items-center\"\r\n      >\r\n        Logout\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n"],"names":["axios","defaults","baseURL","_ref","setIsLogged","blogData","setBlogData","useState","title","description","category","images","links","bid","isLoading","setIsLoading","nav","useNavigate","handleChange","e","index","type","name","value","target","updatedImages","_objectSpread","updatedLinks","addNewField","ErrorBlog","toast","error","position","SuccessBlog","success","_jsxs","_Fragment","children","_jsx","className","onSubmit","preventDefault","length","async","post","console","createBlogPost","htmlFor","id","placeholder","onChange","map","image","concat","onClick","link","min","disabled","ToastContainer","handleLogout","localStorage","removeItem"],"sourceRoot":""}